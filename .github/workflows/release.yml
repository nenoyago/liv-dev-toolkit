name: 🦋 Auto Release Public Packages

on:
  push:
    branches:
      - main

env:
  CI: true
  HUSKY: 0

permissions:
  contents: write
  pull-requests: write

jobs:
  version-and-pr:
    name: 📝 Version Packages & Create Release PR
    environment: Semver
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.6.5

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14
          cache: "pnpm"

      - name: ⚡ Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🌿 Create release branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions@users.noreply.github.com"
          NEW_BRANCH="release/auto-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $NEW_BRANCH
          echo "NEW_BRANCH=$NEW_BRANCH" >> $GITHUB_ENV

      - name: 📝 Check for changesets
        id: check
        run: |
          if pnpm changeset status | grep -q "No unreleased changes"; then
            echo "✅ No changesets to release"
            echo "CHANGES=false" >> $GITHUB_ENV
          else
            echo "CHANGES=true" >> $GITHUB_ENV
          fi

      - name: 📝 Version packages
        if: env.CHANGES == 'true'
        run: pnpm changeset version

      - name: 💾 Commit version changes
        if: env.CHANGES == 'true'
        run: |
          git add .
          if git diff --staged --quiet; then
            echo "✅ No changes to commit"
          else
            git commit -m "chore(release): update package versions [skip ci]"
            echo "📦 Version changes committed"
          fi

      - name: ⬆️ Push release branch
        if: env.CHANGES == 'true'
        run: git push origin $NEW_BRANCH

      - name: 🏷️ Ensure release labels exist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh label create "🤖 auto-release" --color 6F42C1 --description "Automated version updates" --force || true
          gh label create "🚀 release" --color FFD33D --description "Package releases" --force || true

      - name: 📬 Create Release PR
        if: env.CHANGES == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          PR_INFO=$(gh pr create \
            --title "🚀 Automated Package Release" \
            --body "## 📦 Automated Package Release
            This PR updates package versions based on changesets.

            ### Changes
            - Version updates for public packages
            - Automated via GitHub Actions
            - Merge to publish to npm

            *Auto-generated by release workflow*" \
            --base main \
            --head $NEW_BRANCH \
            --label "🤖 auto-release,🚀 release")

          PR_NUMBER=$(echo "$PR_INFO" | grep -oE '[0-9]+' | head -1)
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "PR_URL=https://github.com/$GITHUB_REPOSITORY/pull/$PR_NUMBER" >> $GITHUB_ENV
          echo "✅ PR created: #$PR_NUMBER"

      - name: ⏱️ Wait for PR checks
        if: env.CHANGES == 'true'
        run: sleep 15

      - name: 🔀 Merge Release PR
        if: env.CHANGES == 'true'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          if [ -n "$PR_NUMBER" ]; then
            echo "🔄 Merging PR #$PR_NUMBER with admin privileges..."
            gh pr merge $PR_NUMBER \
              --merge \
              --admin \
              --delete-branch \
              --body "Automatically merged by release workflow" \
              --message "chore(release): merge auto-release [skip ci]"
            echo "✅ PR merged successfully"
          else
            echo "❌ PR number not found"
            exit 1
          fi

  publish:
    name: 📦 Publish to npm
    environment: Semver
    runs-on: ubuntu-latest
    needs: version-and-pr
    if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]')
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.6.5

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14
          registry-url: "https://registry.npmjs.org"

      - name: ⚡ Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 📝 Publish public packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          pnpm changeset publish

      - name: 🎉 Release summary
        run: |
          echo "✅ Packages published successfully!"
